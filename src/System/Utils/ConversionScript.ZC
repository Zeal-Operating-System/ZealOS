U0 Cvt(U8 *ff_mask="*", U8 *fu_flags="+r+l-i+S")
{
	FR(".HC", ".ZC", ff_mask);
	
	Find("MemCpy",			ff_mask, fu_flags, "MemCopy");
	Find("MemCmp", 			ff_mask, fu_flags, "MemCompare");
	Find("StrCpy", 			ff_mask, fu_flags, "StrCopy");
	Find("StrCmp", 			ff_mask, fu_flags, "StrCompare");
	Find("StrICmp", 		ff_mask, fu_flags, "StrICompare");
	Find("StrNCmp", 		ff_mask, fu_flags, "StrNCompare");
	Find("StrNICmp", 		ff_mask, fu_flags, "StrNICompare");
	Find("BEqu", 			ff_mask, fu_flags, "BEqual");
	Find("LBEqu", 			ff_mask, fu_flags, "LBEqual");
	Find("ms", 				ff_mask, fu_flags, "mouse");
	Find("Snd", 			ff_mask, fu_flags, "Sound");
	Find("SndTaskEndCB",	ff_mask, fu_flags, "SoundTaskEndCB");
	Find("mp_cnt", 			ff_mask, fu_flags, "mp_count");
	Find("QueIns", 			ff_mask, fu_flags, "QueueInsert");
	Find("QueInit", 		ff_mask, fu_flags, "QueueInit");
	Find("QueRem", 			ff_mask, fu_flags, "QueueRemove");
	Find("QueDel", 			ff_mask, fu_flags, "QueueDel");
	Find("MsSet", 			ff_mask, fu_flags, "MouseSet");
	Find("UnusedStk",		ff_mask, fu_flags, "UnusedStack");
	Find("word_lst", 		ff_mask, fu_flags, "word_list");
	Find("FileExtRem",		ff_mask, fu_flags, "FileExtRemove");
	Find("cnts", 			ff_mask, fu_flags, "counts");
	Find("PostMsg", 		ff_mask, fu_flags, "MessagePost");
	Find("PostMsgWait", 	ff_mask, fu_flags, "MessagePostWait");
	Find("QSort", 			ff_mask, fu_flags, "QuickSort");
	Find("QSortI64", 		ff_mask, fu_flags, "QuickSortI64");
	Find("ScanMsg", 		ff_mask, fu_flags, "MessageScan");
	Find("cnts", 			ff_mask, fu_flags, "counts");
	Find("Dsk",				ff_mask, fu_flags, "Disk");
	Find("collision_cnt",	ff_mask, fu_flags, "collision_count");
	Find("Drv", 			ff_mask, fu_flags, "Drive");
	Find("DrvRep",			ff_mask, fu_flags, "DriveRep");
	Find("Drv2Let",			ff_mask, fu_flags, "Drive2Letter");
	Find("LstSub",			ff_mask, fu_flags, "ListSub");
	Find("LstMatch",		ff_mask, fu_flags, "ListMatch");
	Find("DefineLstLoad",	ff_mask, fu_flags, "DefineListLoad");
	Find("ExtDft",			ff_mask, fu_flags, "ExtDefault");
	Find("ExtChg",			ff_mask, fu_flags, "ExtChange");
	Find("RegDft",			ff_mask, fu_flags, "RegDefault");
	Find("\"HC\"",			ff_mask, fu_flags, "\"ZC\"");
	Find("CDrv",			ff_mask, fu_flags, "CDrive");
	Find("CDbgInfo",		ff_mask, fu_flags, "CDebugInfo");
	Find("dbg_info",		ff_mask, fu_flags, "debug_info");
	Find("StrFirstRem",		ff_mask, fu_flags, "StrFirstRemove");
	Find("StrLastRem",		ff_mask, fu_flags, "StrLastRemove");
	Find("TempleOS/Apps",	ff_mask, fu_flags, "/Apps");
	Find("adam_task",		ff_mask, fu_flags, "sys_task");
	Find("JobQue",			ff_mask, fu_flags, "JobQueue");
	Find("MSG_",			ff_mask, CatPrint(fu_flags, "-l"), "MESSAGE_");
	Find(".HC",				ff_mask, fu_flags, ".ZC");
	CatPrint(fu_flags, "+l");
	Find("Msg",				ff_mask, fu_flags, "Message");
	Find("MusicSettingsRst",ff_mask, fu_flags, "MusicSettingsReset");
	Find("hndlr",			ff_mask, fu_flags, "handler");
	Find("FifoU8Rem",		ff_mask, fu_flags, "FifoU8Remove");
	Find("GodBitsIns",		ff_mask, fu_flags, "GodBitsInsert");
	Find("fp_draw_ms",		ff_mask, fu_flags, "fp_draw_mouse");
	Find("DrawStdMs",		ff_mask, fu_flags, "DrawStdMouse");
	Find("WIG_TASK_DFT",	ff_mask, fu_flags, "WIG_TASK_DEFAULT");
	Find("DirMk",			ff_mask, fu_flags, "DirMake");
	Find("GetI64",			ff_mask, fu_flags, "I64Get");
	Find("GetF64",			ff_mask, fu_flags, "F64Get");
	Find("GetStr",			ff_mask, fu_flags, "StrGet");
	Find("GetChar",			ff_mask, fu_flags, "CharGet");

	//Added from Anfintony's Insecticide November 24 2022
	Find("GetMsg",				ff_mask,fu_flags,"MessageGet");
	Find("DRV_SIGNATURE_VAL",	ff_mask,fu_flags,"DRIVE_SIGNATURE_VAL");
	Find("dv_signature",		ff_mask,fu_flags,"drive_signature");
	Find("DrvTextAttrGet",		ff_mask,fu_flags,"DriveTextAttrGet");
	Find("DrvIsWritable",		ff_mask,fu_flags,"DriveIsWritable");
	Find("gr_palette_std",		ff_mask,fu_flags,"gr32_palette_std");
	Find("GetKey",				ff_mask,fu_flags,"KeyGet");
	Find("STD_DISTRO_DVD_CFG",	ff_mask,fu_flags,"STD_DISTRO_DVD_CONFIG");
	Find("CBGR48",				ff_mask,fu_flags,"CBGR24");
	Find("CFreeLst",			ff_mask,fu_flags,"CFreeList");
	Find("DrvLock",				ff_mask,fu_flags,"DriveLock");
	Find("DrvUnlock",			ff_mask,fu_flags,"DriveUnlock");
	Find("DrvChk",				ff_mask,fu_flags,"DriveCheck");
	Find("AMAlloc",				ff_mask,fu_flags,"SysMAlloc");
	Find("Let2Drv",				ff_mask,fu_flags,"Letter2Drive");
	Find("Let2Let",				ff_mask,fu_flags,"Letter2Letter");
	Find("Let2BlkDev",			ff_mask,fu_flags,"Letter2BlkDev");
	Find("first_drv_let",		ff_mask,fu_flags,"first_drive_let");

	//Added by Doodguy and Anfintony November 25 2022
	Find("ScanKey",ff_mask,fu_flags,"KeyScan");
	Find("ScanChar",ff_mask,fu_flags,"CharScan");
	Find("fp_final_scrn_update",ff_mask,fu_flags,"fp_final_screen_update");
	
	//Added by y4my4m April 25 2023
	Find("FifoI64Cnt",			ff_mask,fu_flags,"FifoI64Count");
	Find("FifoI64Rem",			ff_mask,fu_flags,"FifoI64Remove");
	Find("FifoU8Cnt",			ff_mask,fu_flags,"FifoU8Count");
	Find("FifoU8Rem",			ff_mask,fu_flags,"FifoU8Remove");
	Find("AdamErr",				ff_mask,fu_flags,"SysErr");
	Find("AdamLog",				ff_mask,fu_flags,"SysLog");
	Find("CHashGlblVar",		ff_mask,fu_flags,"CHashGlobalVar");
	Find("HTT_GLBL_VAR",		ff_mask,fu_flags,"HTT_GLOBAL_VAR");
	Find("fp_draw_ms",			ff_mask,fu_flags,"fp_draw_mouse");
	Find("fp_draw_grab_ms",		ff_mask,fu_flags,"fp_draw_grab_mouse");
	Find("fp_final_scrn_update",ff_mask,fu_flags,"fp_final_screen_update");
	Find("DCColorChg",			ff_mask,fu_flags,"DCColorChange");
	Find("Adam(",				ff_mask,fu_flags,"Sys("); // using Adam( not to rename lists that contain the name Adam
	Find("KbdMsHndlr",			ff_mask,fu_flags,"KbdMouseHandler");
	Find("WinMsUpdate",			ff_mask,fu_flags,"WinMouseUpdate");
	Find("RWF_SHOW_DOLLAR",		ff_mask,fu_flags,"RAWF_SHOW_DOLLAR");
	Find("RWF_LAST_DOLLAR",		ff_mask,fu_flags,"RAWF_LAST_DOLLAR");
	Find("RWF_IN_DOLLAR",		ff_mask,fu_flags,"RAWF_IN_DOLLAR");
	Find("RWF_SCROLL",			ff_mask,fu_flags,"RAWF_SCROLL");
	Find("RawDr",				ff_mask,fu_flags,"RawDumpRegs");

	//Added by y4my4m August 13 2023
	Find("ms_hard",				ff_mask,fu_flags,"mouse_hard");
	Find("MsUpdate",			ff_mask,fu_flags,"MouseUpdate");
  	Find("FlushMsgs",			ff_mask,fu_flags,"FlushMessages");

	"\n$$BK,1$$$$LTRED$$Might want to go over these$$FG$$$$BK,0$$\n";
	Find("MemSet", ff_mask, fu_flags);
}

//Cvt("Sup1/*");
